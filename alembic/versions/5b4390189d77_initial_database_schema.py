"""Initial database schema

Revision ID: 5b4390189d77
Revises: 
Create Date: 2025-08-19 22:06:46.815735

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5b4390189d77'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fogis_match_id', sa.Integer(), nullable=True),
    sa.Column('home_team', sa.String(length=255), nullable=False),
    sa.Column('away_team', sa.String(length=255), nullable=False),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.Column('match_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('venue', sa.String(length=255), nullable=False),
    sa.Column('competition', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('referee_id', sa.Integer(), nullable=True),
    sa.Column('referee_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('reporting_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reporting_ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_match_active', 'matches', ['is_active'], unique=False)
    op.create_index('idx_match_date', 'matches', ['match_date'], unique=False)
    op.create_index('idx_match_status', 'matches', ['status'], unique=False)
    op.create_index(op.f('ix_matches_fogis_match_id'), 'matches', ['fogis_match_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('referee_id', sa.Integer(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index('idx_user_active', 'users', ['is_active'], unique=False)
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_username', 'users', ['username'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('minute', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('player_name', sa.String(length=255), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('team', sa.String(length=255), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('voice_transcription', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('audio_file_path', sa.String(length=500), nullable=True),
    sa.Column('synced_to_fogis', sa.Boolean(), nullable=False),
    sa.Column('fogis_event_id', sa.Integer(), nullable=True),
    sa.Column('sync_attempts', sa.Integer(), nullable=False),
    sa.Column('last_sync_attempt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_error', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_event_deleted', 'events', ['is_deleted'], unique=False)
    op.create_index('idx_event_match_id', 'events', ['match_id'], unique=False)
    op.create_index('idx_event_minute', 'events', ['minute'], unique=False)
    op.create_index('idx_event_sync_status', 'events', ['synced_to_fogis'], unique=False)
    op.create_index('idx_event_type', 'events', ['event_type'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token')
    )
    op.create_index('idx_session_active', 'user_sessions', ['is_active'], unique=False)
    op.create_index('idx_session_expires', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_session_token', 'user_sessions', ['session_token'], unique=False)
    op.create_index('idx_session_user_id', 'user_sessions', ['user_id'], unique=False)
    op.create_table('voice_processing_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('input_data', sa.Text(), nullable=True),
    sa.Column('output_data', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('audio_file_path', sa.String(length=500), nullable=True),
    sa.Column('output_file_path', sa.String(length=500), nullable=True),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_voice_log_created', 'voice_processing_logs', ['created_at'], unique=False)
    op.create_index('idx_voice_log_match', 'voice_processing_logs', ['match_id'], unique=False)
    op.create_index('idx_voice_log_operation', 'voice_processing_logs', ['operation_type'], unique=False)
    op.create_index('idx_voice_log_status', 'voice_processing_logs', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_voice_log_status', table_name='voice_processing_logs')
    op.drop_index('idx_voice_log_operation', table_name='voice_processing_logs')
    op.drop_index('idx_voice_log_match', table_name='voice_processing_logs')
    op.drop_index('idx_voice_log_created', table_name='voice_processing_logs')
    op.drop_table('voice_processing_logs')
    op.drop_index('idx_session_user_id', table_name='user_sessions')
    op.drop_index('idx_session_token', table_name='user_sessions')
    op.drop_index('idx_session_expires', table_name='user_sessions')
    op.drop_index('idx_session_active', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index('idx_event_type', table_name='events')
    op.drop_index('idx_event_sync_status', table_name='events')
    op.drop_index('idx_event_minute', table_name='events')
    op.drop_index('idx_event_match_id', table_name='events')
    op.drop_index('idx_event_deleted', table_name='events')
    op.drop_table('events')
    op.drop_index('idx_user_username', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_index('idx_user_active', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_matches_fogis_match_id'), table_name='matches')
    op.drop_index('idx_match_status', table_name='matches')
    op.drop_index('idx_match_date', table_name='matches')
    op.drop_index('idx_match_active', table_name='matches')
    op.drop_table('matches')
    # ### end Alembic commands ###
